"""Initial schema

Revision ID: 8d6388344f0a
Revises: 
Create Date: 2025-06-26 08:10:58.695384

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8d6388344f0a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Apply migration."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('CREATE EXTENSION IF NOT EXISTS "uuid-ossp"')
    op.create_table('users',
    sa.Column('u_id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('u_email', sa.String(length=255), nullable=False),
    sa.Column('u_username', sa.String(length=100), nullable=False),
    sa.Column('u_password_hash', sa.String(length=255), nullable=False),
    sa.Column('u_is_active', sa.Boolean(), nullable=False),
    sa.Column('u_is_verified', sa.Boolean(), nullable=False),
    sa.Column('u_is_locked', sa.Boolean(), nullable=False),
    sa.Column('u_email_verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('u_last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('u_failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('u_locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('u_metadata', sa.JSON(), nullable=True),
    sa.Column('u_ip_address', sa.String(length=45), nullable=True),
    sa.Column('u_user_agent', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('length(u_email) >= 3', name='ck_users_email_length'),
    sa.CheckConstraint('length(u_username) >= 3', name='ck_users_username_length'),
    sa.PrimaryKeyConstraint('u_id'),
    sa.UniqueConstraint('u_email', name='uq_users_email'),
    sa.UniqueConstraint('u_username', name='uq_users_username')
    )
    op.create_index('idx_users_is_active', 'users', ['u_is_active'], unique=False)
    op.create_index('idx_users_is_locked', 'users', ['u_is_locked'], unique=False)
    op.create_index('idx_users_is_verified', 'users', ['u_is_verified'], unique=False)
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_u_email'), 'users', ['u_email'], unique=True)
    op.create_index(op.f('ix_users_u_id'), 'users', ['u_id'], unique=False)
    op.create_index(op.f('ix_users_u_is_active'), 'users', ['u_is_active'], unique=False)
    op.create_index(op.f('ix_users_u_is_locked'), 'users', ['u_is_locked'], unique=False)
    op.create_index(op.f('ix_users_u_is_verified'), 'users', ['u_is_verified'], unique=False)
    op.create_index(op.f('ix_users_u_last_login_at'), 'users', ['u_last_login_at'], unique=False)
    op.create_index(op.f('ix_users_u_locked_until'), 'users', ['u_locked_until'], unique=False)
    op.create_index(op.f('ix_users_u_username'), 'users', ['u_username'], unique=True)
    op.create_table('audit_logs',
    sa.Column('al_id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('al_user_id', sa.UUID(), nullable=True),
    sa.Column('al_action', sa.String(length=100), nullable=False),
    sa.Column('al_entity_type', sa.String(length=100), nullable=True),
    sa.Column('al_entity_id', sa.UUID(), nullable=True),
    sa.Column('al_old_values', sa.JSON(), nullable=True),
    sa.Column('al_new_values', sa.JSON(), nullable=True),
    sa.Column('al_ip_address', sa.String(length=45), nullable=True),
    sa.Column('al_user_agent', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('al_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['al_user_id'], ['users.u_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('al_id')
    )
    op.create_index('idx_audit_logs_action', 'audit_logs', ['al_action'], unique=False)
    op.create_index('idx_audit_logs_created_at', 'audit_logs', ['created_at'], unique=False)
    op.create_index('idx_audit_logs_entity', 'audit_logs', ['al_entity_type', 'al_entity_id'], unique=False)
    op.create_index('idx_audit_logs_user_id', 'audit_logs', ['al_user_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_al_action'), 'audit_logs', ['al_action'], unique=False)
    op.create_index(op.f('ix_audit_logs_al_entity_id'), 'audit_logs', ['al_entity_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_al_entity_type'), 'audit_logs', ['al_entity_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_al_id'), 'audit_logs', ['al_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_al_user_id'), 'audit_logs', ['al_user_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_created_at'), 'audit_logs', ['created_at'], unique=False)
    op.create_table('login_attempts',
    sa.Column('la_id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('la_user_id', sa.UUID(), nullable=True),
    sa.Column('la_email', sa.String(length=255), nullable=False),
    sa.Column('la_ip_address', sa.String(length=45), nullable=True),
    sa.Column('la_user_agent', sa.String(), nullable=True),
    sa.Column('la_success', sa.Boolean(), nullable=False),
    sa.Column('la_failure_reason', sa.String(length=255), nullable=True),
    sa.Column('la_metadata', sa.JSON(), nullable=True),
    sa.Column('la_attempted_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['la_user_id'], ['users.u_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('la_id')
    )
    op.create_index('idx_login_attempts_attempted_at', 'login_attempts', ['la_attempted_at'], unique=False)
    op.create_index('idx_login_attempts_email', 'login_attempts', ['la_email'], unique=False)
    op.create_index('idx_login_attempts_ip_address', 'login_attempts', ['la_ip_address'], unique=False)
    op.create_index('idx_login_attempts_success', 'login_attempts', ['la_success'], unique=False)
    op.create_index('idx_login_attempts_user_id', 'login_attempts', ['la_user_id'], unique=False)
    op.create_index(op.f('ix_login_attempts_la_attempted_at'), 'login_attempts', ['la_attempted_at'], unique=False)
    op.create_index(op.f('ix_login_attempts_la_email'), 'login_attempts', ['la_email'], unique=False)
    op.create_index(op.f('ix_login_attempts_la_id'), 'login_attempts', ['la_id'], unique=False)
    op.create_index(op.f('ix_login_attempts_la_ip_address'), 'login_attempts', ['la_ip_address'], unique=False)
    op.create_index(op.f('ix_login_attempts_la_success'), 'login_attempts', ['la_success'], unique=False)
    op.create_index(op.f('ix_login_attempts_la_user_id'), 'login_attempts', ['la_user_id'], unique=False)
    op.create_table('password_history',
    sa.Column('ph_id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('ph_user_id', sa.UUID(), nullable=False),
    sa.Column('ph_password_hash', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['ph_user_id'], ['users.u_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ph_id')
    )
    op.create_index('idx_password_history_created_at', 'password_history', ['created_at'], unique=False)
    op.create_index('idx_password_history_user_id', 'password_history', ['ph_user_id'], unique=False)
    op.create_index(op.f('ix_password_history_created_at'), 'password_history', ['created_at'], unique=False)
    op.create_index(op.f('ix_password_history_ph_id'), 'password_history', ['ph_id'], unique=False)
    op.create_index(op.f('ix_password_history_ph_user_id'), 'password_history', ['ph_user_id'], unique=False)
    op.create_table('two_factor_auth',
    sa.Column('tfa_id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('tfa_user_id', sa.UUID(), nullable=False),
    sa.Column('tfa_secret_key', sa.Text(), nullable=True),
    sa.Column('tfa_backup_codes', sa.Text(), nullable=True),
    sa.Column('tfa_is_enabled', sa.Boolean(), nullable=False),
    sa.Column('tfa_method', sa.String(length=50), nullable=False),
    sa.Column('tfa_enabled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('tfa_last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('tfa_failed_attempts', sa.Integer(), nullable=False),
    sa.Column('tfa_phone_number', sa.String(length=20), nullable=True),
    sa.Column('tfa_email', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tfa_user_id'], ['users.u_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tfa_id'),
    sa.UniqueConstraint('tfa_user_id', name='uq_two_factor_auth_user_id')
    )
    op.create_index('idx_two_factor_auth_is_enabled', 'two_factor_auth', ['tfa_is_enabled'], unique=False)
    op.create_index(op.f('ix_two_factor_auth_created_at'), 'two_factor_auth', ['created_at'], unique=False)
    op.create_index(op.f('ix_two_factor_auth_tfa_id'), 'two_factor_auth', ['tfa_id'], unique=False)
    op.create_index(op.f('ix_two_factor_auth_tfa_is_enabled'), 'two_factor_auth', ['tfa_is_enabled'], unique=False)
    op.create_index(op.f('ix_two_factor_auth_tfa_user_id'), 'two_factor_auth', ['tfa_user_id'], unique=True)
    op.create_table('user_devices',
    sa.Column('ud_id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('ud_user_id', sa.UUID(), nullable=False),
    sa.Column('ud_device_id', sa.String(length=255), nullable=False),
    sa.Column('ud_device_name', sa.String(length=255), nullable=True),
    sa.Column('ud_device_type', sa.String(length=100), nullable=True),
    sa.Column('ud_platform', sa.String(length=100), nullable=True),
    sa.Column('ud_browser', sa.String(length=100), nullable=True),
    sa.Column('ud_is_trusted', sa.Boolean(), nullable=False),
    sa.Column('ud_last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('ud_is_active', sa.Boolean(), nullable=False),
    sa.Column('ud_metadata', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['ud_user_id'], ['users.u_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ud_id')
    )
    op.create_index('idx_user_devices_is_active', 'user_devices', ['ud_is_active'], unique=False)
    op.create_index('idx_user_devices_is_trusted', 'user_devices', ['ud_is_trusted'], unique=False)
    op.create_index('idx_user_devices_user_device', 'user_devices', ['ud_user_id', 'ud_device_id'], unique=False)
    op.create_index(op.f('ix_user_devices_created_at'), 'user_devices', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_devices_ud_device_id'), 'user_devices', ['ud_device_id'], unique=False)
    op.create_index(op.f('ix_user_devices_ud_id'), 'user_devices', ['ud_id'], unique=False)
    op.create_index(op.f('ix_user_devices_ud_is_active'), 'user_devices', ['ud_is_active'], unique=False)
    op.create_index(op.f('ix_user_devices_ud_is_trusted'), 'user_devices', ['ud_is_trusted'], unique=False)
    op.create_index(op.f('ix_user_devices_ud_last_used_at'), 'user_devices', ['ud_last_used_at'], unique=False)
    op.create_index(op.f('ix_user_devices_ud_user_id'), 'user_devices', ['ud_user_id'], unique=False)
    op.create_table('user_sessions',
    sa.Column('us_id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('us_user_id', sa.UUID(), nullable=False),
    sa.Column('us_refresh_token_hash', sa.String(length=255), nullable=False),
    sa.Column('us_expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('us_ip_address', sa.String(length=45), nullable=True),
    sa.Column('us_user_agent', sa.String(), nullable=True),
    sa.Column('us_device_info', sa.JSON(), nullable=True),
    sa.Column('us_is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('us_last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('us_logout_reason', sa.String(length=255), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['us_user_id'], ['users.u_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('us_id')
    )
    op.create_index('idx_user_sessions_expires_at', 'user_sessions', ['us_expires_at'], unique=False)
    op.create_index('idx_user_sessions_is_active', 'user_sessions', ['us_is_active'], unique=False)
    op.create_index('idx_user_sessions_user_id', 'user_sessions', ['us_user_id'], unique=False)
    op.create_index(op.f('ix_user_sessions_created_at'), 'user_sessions', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_sessions_us_expires_at'), 'user_sessions', ['us_expires_at'], unique=False)
    op.create_index(op.f('ix_user_sessions_us_id'), 'user_sessions', ['us_id'], unique=False)
    op.create_index(op.f('ix_user_sessions_us_is_active'), 'user_sessions', ['us_is_active'], unique=False)
    op.create_index(op.f('ix_user_sessions_us_last_activity'), 'user_sessions', ['us_last_activity'], unique=False)
    op.create_index(op.f('ix_user_sessions_us_refresh_token_hash'), 'user_sessions', ['us_refresh_token_hash'], unique=True)
    op.create_index(op.f('ix_user_sessions_us_user_id'), 'user_sessions', ['us_user_id'], unique=False)
    op.create_table('user_tokens',
    sa.Column('ut_id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('ut_user_id', sa.UUID(), nullable=False),
    sa.Column('ut_token_hash', sa.String(length=255), nullable=False),
    sa.Column('ut_token_type', sa.String(length=50), nullable=False),
    sa.Column('ut_expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ut_is_used', sa.Boolean(), nullable=False),
    sa.Column('ut_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('ut_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['ut_user_id'], ['users.u_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ut_id')
    )
    op.create_index('idx_user_tokens_expires_at', 'user_tokens', ['ut_expires_at'], unique=False)
    op.create_index('idx_user_tokens_is_used', 'user_tokens', ['ut_is_used'], unique=False)
    op.create_index('idx_user_tokens_token_type', 'user_tokens', ['ut_token_type'], unique=False)
    op.create_index('idx_user_tokens_user_id', 'user_tokens', ['ut_user_id'], unique=False)
    op.create_index(op.f('ix_user_tokens_created_at'), 'user_tokens', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_tokens_ut_expires_at'), 'user_tokens', ['ut_expires_at'], unique=False)
    op.create_index(op.f('ix_user_tokens_ut_id'), 'user_tokens', ['ut_id'], unique=False)
    op.create_index(op.f('ix_user_tokens_ut_is_used'), 'user_tokens', ['ut_is_used'], unique=False)
    op.create_index(op.f('ix_user_tokens_ut_token_hash'), 'user_tokens', ['ut_token_hash'], unique=True)
    op.create_index(op.f('ix_user_tokens_ut_token_type'), 'user_tokens', ['ut_token_type'], unique=False)
    op.create_index(op.f('ix_user_tokens_ut_user_id'), 'user_tokens', ['ut_user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Revert migration."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_tokens_ut_user_id'), table_name='user_tokens')
    op.drop_index(op.f('ix_user_tokens_ut_token_type'), table_name='user_tokens')
    op.drop_index(op.f('ix_user_tokens_ut_token_hash'), table_name='user_tokens')
    op.drop_index(op.f('ix_user_tokens_ut_is_used'), table_name='user_tokens')
    op.drop_index(op.f('ix_user_tokens_ut_id'), table_name='user_tokens')
    op.drop_index(op.f('ix_user_tokens_ut_expires_at'), table_name='user_tokens')
    op.drop_index(op.f('ix_user_tokens_created_at'), table_name='user_tokens')
    op.drop_index('idx_user_tokens_user_id', table_name='user_tokens')
    op.drop_index('idx_user_tokens_token_type', table_name='user_tokens')
    op.drop_index('idx_user_tokens_is_used', table_name='user_tokens')
    op.drop_index('idx_user_tokens_expires_at', table_name='user_tokens')
    op.drop_table('user_tokens')
    op.drop_index(op.f('ix_user_sessions_us_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_us_refresh_token_hash'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_us_last_activity'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_us_is_active'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_us_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_us_expires_at'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_created_at'), table_name='user_sessions')
    op.drop_index('idx_user_sessions_user_id', table_name='user_sessions')
    op.drop_index('idx_user_sessions_is_active', table_name='user_sessions')
    op.drop_index('idx_user_sessions_expires_at', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_user_devices_ud_user_id'), table_name='user_devices')
    op.drop_index(op.f('ix_user_devices_ud_last_used_at'), table_name='user_devices')
    op.drop_index(op.f('ix_user_devices_ud_is_trusted'), table_name='user_devices')
    op.drop_index(op.f('ix_user_devices_ud_is_active'), table_name='user_devices')
    op.drop_index(op.f('ix_user_devices_ud_id'), table_name='user_devices')
    op.drop_index(op.f('ix_user_devices_ud_device_id'), table_name='user_devices')
    op.drop_index(op.f('ix_user_devices_created_at'), table_name='user_devices')
    op.drop_index('idx_user_devices_user_device', table_name='user_devices')
    op.drop_index('idx_user_devices_is_trusted', table_name='user_devices')
    op.drop_index('idx_user_devices_is_active', table_name='user_devices')
    op.drop_table('user_devices')
    op.drop_index(op.f('ix_two_factor_auth_tfa_user_id'), table_name='two_factor_auth')
    op.drop_index(op.f('ix_two_factor_auth_tfa_is_enabled'), table_name='two_factor_auth')
    op.drop_index(op.f('ix_two_factor_auth_tfa_id'), table_name='two_factor_auth')
    op.drop_index(op.f('ix_two_factor_auth_created_at'), table_name='two_factor_auth')
    op.drop_index('idx_two_factor_auth_is_enabled', table_name='two_factor_auth')
    op.drop_table('two_factor_auth')
    op.drop_index(op.f('ix_password_history_ph_user_id'), table_name='password_history')
    op.drop_index(op.f('ix_password_history_ph_id'), table_name='password_history')
    op.drop_index(op.f('ix_password_history_created_at'), table_name='password_history')
    op.drop_index('idx_password_history_user_id', table_name='password_history')
    op.drop_index('idx_password_history_created_at', table_name='password_history')
    op.drop_table('password_history')
    op.drop_index(op.f('ix_login_attempts_la_user_id'), table_name='login_attempts')
    op.drop_index(op.f('ix_login_attempts_la_success'), table_name='login_attempts')
    op.drop_index(op.f('ix_login_attempts_la_ip_address'), table_name='login_attempts')
    op.drop_index(op.f('ix_login_attempts_la_id'), table_name='login_attempts')
    op.drop_index(op.f('ix_login_attempts_la_email'), table_name='login_attempts')
    op.drop_index(op.f('ix_login_attempts_la_attempted_at'), table_name='login_attempts')
    op.drop_index('idx_login_attempts_user_id', table_name='login_attempts')
    op.drop_index('idx_login_attempts_success', table_name='login_attempts')
    op.drop_index('idx_login_attempts_ip_address', table_name='login_attempts')
    op.drop_index('idx_login_attempts_email', table_name='login_attempts')
    op.drop_index('idx_login_attempts_attempted_at', table_name='login_attempts')
    op.drop_table('login_attempts')
    op.drop_index(op.f('ix_audit_logs_created_at'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_al_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_al_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_al_entity_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_al_entity_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_al_action'), table_name='audit_logs')
    op.drop_index('idx_audit_logs_user_id', table_name='audit_logs')
    op.drop_index('idx_audit_logs_entity', table_name='audit_logs')
    op.drop_index('idx_audit_logs_created_at', table_name='audit_logs')
    op.drop_index('idx_audit_logs_action', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_users_u_username'), table_name='users')
    op.drop_index(op.f('ix_users_u_locked_until'), table_name='users')
    op.drop_index(op.f('ix_users_u_last_login_at'), table_name='users')
    op.drop_index(op.f('ix_users_u_is_verified'), table_name='users')
    op.drop_index(op.f('ix_users_u_is_locked'), table_name='users')
    op.drop_index(op.f('ix_users_u_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_u_id'), table_name='users')
    op.drop_index(op.f('ix_users_u_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_index('idx_users_is_verified', table_name='users')
    op.drop_index('idx_users_is_locked', table_name='users')
    op.drop_index('idx_users_is_active', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###